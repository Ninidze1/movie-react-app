{"ast":null,"code":"var _jsxFileName = \"/Users/giorgininidze/Documents/React Projects/movie-app/src/auth/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Auth.css';\nimport bcrypt from 'bcryptjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState(null);\n  const handleAuth = event => {\n    event.preventDefault();\n    setError(null);\n    if (!email || !password || !isLogin && password !== confirmPassword) {\n      setError('Please fill in all fields and make sure passwords match.');\n      return;\n    }\n    if (isLogin) {\n      const storedUser = JSON.parse(localStorage.getItem('user'));\n      if (storedUser && storedUser.email === email) {\n        const passwordMatch = bcrypt.compareSync(password, storedUser.password);\n        if (passwordMatch) {\n          localStorage.setItem('isAuthenticated', 'true');\n          navigate('/');\n        } else {\n          setError('Invalid credentials.');\n        }\n      } else {\n        setError('User not found.');\n      }\n    } else {\n      const hashedPassword = bcrypt.hashSync(password, 10);\n      localStorage.setItem('user', JSON.stringify({\n        email,\n        password: hashedPassword\n      }));\n      localStorage.setItem('isAuthenticated', 'true');\n      navigate('/');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAuth,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"auth-button\",\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-link\",\n        onClick: () => setIsLogin(!isLogin),\n        children: isLogin ? 'Need an account? Register' : 'Already have an account? Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Auth, \"iRvxEbiRV8fBDkC2DMA5WieNJkw=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useNavigate","bcrypt","jsxDEV","_jsxDEV","Auth","_s","navigate","isLogin","setIsLogin","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","handleAuth","event","preventDefault","storedUser","JSON","parse","localStorage","getItem","passwordMatch","compareSync","setItem","hashedPassword","hashSync","stringify","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/giorgininidze/Documents/React Projects/movie-app/src/auth/Auth.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Auth.css';\nimport bcrypt from 'bcryptjs';\n\nconst Auth = () => {\n    const navigate = useNavigate();\n    const [isLogin, setIsLogin] = useState(true);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [error, setError] = useState(null);\n\n    const handleAuth = (event) => {\n        event.preventDefault();\n        setError(null);\n\n        if (!email || !password || (!isLogin && password !== confirmPassword)) {\n            setError('Please fill in all fields and make sure passwords match.');\n            return;\n        }\n\n        if (isLogin) {\n            const storedUser = JSON.parse(localStorage.getItem('user'));\n            if (storedUser && storedUser.email === email) {\n                const passwordMatch = bcrypt.compareSync(password, storedUser.password);\n                if (passwordMatch) {\n                    localStorage.setItem('isAuthenticated', 'true');\n                    navigate('/');\n                } else {\n                    setError('Invalid credentials.');\n                }\n            } else {\n                setError('User not found.');\n            }\n        } else {\n            const hashedPassword = bcrypt.hashSync(password, 10);\n            localStorage.setItem('user', JSON.stringify({ email, password: hashedPassword }));\n            localStorage.setItem('isAuthenticated', 'true');\n            navigate('/');\n        }\n    };\n\n    return (\n        <div className=\"auth\">\n            <form onSubmit={handleAuth} className=\"auth-form\">\n                <h2>{isLogin ? 'Login' : 'Register'}</h2>\n                {error && <div className=\"error\">{error}</div>}\n                <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    className=\"auth-input\"\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    className=\"auth-input\"\n                />\n                {!isLogin && (\n                    <input\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        className=\"auth-input\"\n                    />\n                )}\n                <button type=\"submit\" className=\"auth-button\">\n                    {isLogin ? 'Login' : 'Register'}\n                </button>\n                <div className=\"toggle-link\" onClick={() => setIsLogin(!isLogin)}>\n                    {isLogin ? 'Need an account? Register' : 'Already have an account? Login'}\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}