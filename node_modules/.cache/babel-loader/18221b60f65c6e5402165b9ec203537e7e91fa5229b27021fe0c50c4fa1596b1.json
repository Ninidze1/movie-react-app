{"ast":null,"code":"var _jsxFileName = \"/Users/giorgininidze/Documents/React Projects/movie-app/src/auth/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport './Auth.css';\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  var _errors$email, _errors$password, _errors$confirmPasswo;\n  const navigate = useNavigate();\n  const [isLogin, setIsLogin] = useState(true);\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters'),\n    ...(isLogin ? {} // No additional validation for login\n    : {\n      confirmPassword: Yup.string().required('Confirm Password is required').oneOf([Yup.ref('password')], 'Passwords must match')\n    })\n  });\n\n  // Initialize the form with React Hook Form and Yup resolver\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  // Handle form submission\n  const onSubmit = data => {\n    const {\n      email,\n      password\n    } = data;\n    if (isLogin) {\n      const storedUser = JSON.parse(localStorage.getItem('user'));\n      if (storedUser && storedUser.email === email) {\n        const bytes = CryptoJS.AES.decrypt(storedUser.password, 'secret-key');\n        const decryptedPassword = bytes.toString(CryptoJS.enc.Utf8);\n        if (decryptedPassword === password) {\n          localStorage.setItem('isAuthenticated', 'true');\n          navigate('/');\n        } else {\n          alert('Invalid credentials.');\n        }\n      } else {\n        alert('User not found.');\n      }\n    } else {\n      const encryptedPassword = CryptoJS.AES.encrypt(password, 'secret-key').toString();\n      localStorage.setItem('user', JSON.stringify({\n        email,\n        password: encryptedPassword\n      }));\n      localStorage.setItem('isAuthenticated', 'true');\n      navigate('/');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          ...register('email'),\n          className: `auth-input ${errors.email ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          ...register('password'),\n          className: `auth-input ${errors.password ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          ...register('confirmPassword'),\n          className: `auth-input ${errors.confirmPassword ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"auth-button\",\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-link\",\n        onClick: () => setIsLogin(!isLogin),\n        children: isLogin ? 'Need an account? Register' : 'Already have an account? Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Auth, \"dRIqkSj41O/QPS4gkHYS9uz/MxU=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useNavigate","useForm","yupResolver","Yup","CryptoJS","jsxDEV","_jsxDEV","Auth","_s","_errors$email","_errors$password","_errors$confirmPasswo","navigate","isLogin","setIsLogin","validationSchema","object","shape","email","string","required","password","min","confirmPassword","oneOf","ref","register","handleSubmit","formState","errors","resolver","onSubmit","data","storedUser","JSON","parse","localStorage","getItem","bytes","AES","decrypt","decryptedPassword","toString","enc","Utf8","setItem","alert","encryptedPassword","encrypt","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","message","onClick","_c","$RefreshReg$"],"sources":["/Users/giorgininidze/Documents/React Projects/movie-app/src/auth/Auth.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport './Auth.css';\nimport CryptoJS from 'crypto-js';\n\nconst Auth = () => {\n    const navigate = useNavigate();\n    const [isLogin, setIsLogin] = useState(true);\n\n    const validationSchema = Yup.object().shape({\n        email: Yup.string().required('Email is required').email('Email is invalid'),\n        password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters'),\n        ...(isLogin\n            ? {} // No additional validation for login\n            : {\n                confirmPassword: Yup.string()\n                    .required('Confirm Password is required')\n                    .oneOf([Yup.ref('password')], 'Passwords must match'),\n            }),\n    });\n\n    // Initialize the form with React Hook Form and Yup resolver\n    const {\n        register,\n        handleSubmit,\n        formState: { errors }\n    } = useForm({\n        resolver: yupResolver(validationSchema),\n    });\n\n    // Handle form submission\n    const onSubmit = (data) => {\n        const { email, password } = data;\n\n        if (isLogin) {\n            const storedUser = JSON.parse(localStorage.getItem('user'));\n            if (storedUser && storedUser.email === email) {\n                const bytes = CryptoJS.AES.decrypt(storedUser.password, 'secret-key');\n                const decryptedPassword = bytes.toString(CryptoJS.enc.Utf8);\n                if (decryptedPassword === password) {\n                    localStorage.setItem('isAuthenticated', 'true');\n                    navigate('/');\n                } else {\n                    alert('Invalid credentials.');\n                }\n            } else {\n                alert('User not found.');\n            }\n        } else {\n            const encryptedPassword = CryptoJS.AES.encrypt(password, 'secret-key').toString();\n            localStorage.setItem('user', JSON.stringify({ email, password: encryptedPassword }));\n            localStorage.setItem('isAuthenticated', 'true');\n            navigate('/');\n        }\n    };\n\n    return (\n        <div className=\"auth\">\n            <form onSubmit={handleSubmit(onSubmit)} className=\"auth-form\">\n                <h2>{isLogin ? 'Login' : 'Register'}</h2>\n                <div className=\"form-group\">\n                    <input\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        {...register('email')}\n                        className={`auth-input ${errors.email ? 'is-invalid' : ''}`}\n                    />\n                    <div className=\"invalid-feedback\">{errors.email?.message}</div>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        {...register('password')}\n                        className={`auth-input ${errors.password ? 'is-invalid' : ''}`}\n                    />\n                    <div className=\"invalid-feedback\">{errors.password?.message}</div>\n                </div>\n                {!isLogin && (\n                    <div className=\"form-group\">\n                        <input\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            {...register('confirmPassword')}\n                            className={`auth-input ${errors.confirmPassword ? 'is-invalid' : ''}`}\n                        />\n                        <div className=\"invalid-feedback\">{errors.confirmPassword?.message}</div>\n                    </div>\n                )}\n                <button type=\"submit\" className=\"auth-button\">\n                    {isLogin ? 'Login' : 'Register'}\n                </button>\n                <div className=\"toggle-link\" onClick={() => setIsLogin(!isLogin)}>\n                    {isLogin ? 'Need an account? Register' : 'Already have an account? Login'}\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}