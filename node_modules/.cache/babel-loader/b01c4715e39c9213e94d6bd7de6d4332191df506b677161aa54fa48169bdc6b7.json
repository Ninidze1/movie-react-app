{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst useGenres = () => {\n  _s();\n  const [genres, setGenres] = useState({});\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchGenres = async () => {\n      const cachedGenres = localStorage.getItem('genres');\n      if (cachedGenres) {\n        setGenres(JSON.parse(cachedGenres));\n      } else {\n        try {\n          const genreResponse = await axios.get('https://api.themoviedb.org/3/genre/movie/list?api_key=936d7807b77bbb4238f8847775a026ad');\n          const genres = genreResponse.data.genres.reduce((acc, genre) => {\n            acc[genre.id] = genre.name;\n            return acc;\n          }, {});\n          localStorage.setItem('genres', JSON.stringify(genres));\n          setGenres(genres);\n        } catch (error) {\n          setError(error.message);\n        }\n      }\n    };\n    fetchGenres();\n  }, []);\n  return {\n    genres,\n    error\n  };\n};\n_s(useGenres, \"DxO3SxBit0AuTGBsCavn233iPoY=\");\nexport default useGenres;","map":{"version":3,"names":["useState","useEffect","axios","useGenres","_s","genres","setGenres","error","setError","fetchGenres","cachedGenres","localStorage","getItem","JSON","parse","genreResponse","get","data","reduce","acc","genre","id","name","setItem","stringify","message"],"sources":["/Users/giorgininidze/Documents/React Projects/movie-app/src/hooks/useGenres.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useGenres = () => {\n    const [genres, setGenres] = useState({});\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchGenres = async () => {\n            const cachedGenres = localStorage.getItem('genres');\n            if (cachedGenres) {\n                setGenres(JSON.parse(cachedGenres));\n            } else {\n                try {\n                    const genreResponse = await axios.get('https://api.themoviedb.org/3/genre/movie/list?api_key=936d7807b77bbb4238f8847775a026ad');\n                    const genres = genreResponse.data.genres.reduce((acc, genre) => {\n                        acc[genre.id] = genre.name;\n                        return acc;\n                    }, {});\n                    localStorage.setItem('genres', JSON.stringify(genres));\n                    setGenres(genres);\n                } catch (error) {\n                    setError(error.message);\n                }\n            }\n        };\n\n        fetchGenres();\n    }, []);\n\n    return { genres, error };\n};\n\nexport default useGenres;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MACnD,IAAIF,YAAY,EAAE;QACdJ,SAAS,CAACO,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC,CAAC;MACvC,CAAC,MAAM;QACH,IAAI;UACA,MAAMK,aAAa,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,wFAAwF,CAAC;UAC/H,MAAMX,MAAM,GAAGU,aAAa,CAACE,IAAI,CAACZ,MAAM,CAACa,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;YAC5DD,GAAG,CAACC,KAAK,CAACC,EAAE,CAAC,GAAGD,KAAK,CAACE,IAAI;YAC1B,OAAOH,GAAG;UACd,CAAC,EAAE,CAAC,CAAC,CAAC;UACNR,YAAY,CAACY,OAAO,CAAC,QAAQ,EAAEV,IAAI,CAACW,SAAS,CAACnB,MAAM,CAAC,CAAC;UACtDC,SAAS,CAACD,MAAM,CAAC;QACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACZC,QAAQ,CAACD,KAAK,CAACkB,OAAO,CAAC;QAC3B;MACJ;IACJ,CAAC;IAEDhB,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEJ,MAAM;IAAEE;EAAM,CAAC;AAC5B,CAAC;AAACH,EAAA,CA5BID,SAAS;AA8Bf,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}