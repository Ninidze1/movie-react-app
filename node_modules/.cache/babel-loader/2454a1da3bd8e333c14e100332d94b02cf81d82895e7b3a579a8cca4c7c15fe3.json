{"ast":null,"code":"var _jsxFileName = \"/Users/giorgininidze/Documents/React Projects/movie-app/src/dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieCard from '../components/MovieCard';\nimport '../components/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const genreResponse = await axios.get('https://api.themoviedb.org/3/genre/movie/list?api_key=936d7807b77bbb4238f8847775a026ad');\n        const genres = genreResponse.data.genres.reduce((acc, genre) => {\n          acc[genre.id] = genre.name;\n          return acc;\n        }, {});\n        setGenres(genres);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    const fetchMovies = async () => {\n      try {\n        const movieResponse = await axios.get('https://api.themoviedb.org/3/discover/movie?api_key=19193cff750d7dd975d3bdfcb8c10ae7');\n        setMovies(movieResponse.data.results);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchGenres();\n    fetchMovies();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  const topRatedMovies = movies.slice(0, 4);\n  const bestOfActionMovies = movies.slice(4, 12);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Rated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list top-rated\",\n      children: topRatedMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie,\n        rank: index + 1,\n        category: \"top-rated\",\n        genres: genres\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Best of Action\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list best-of-action\",\n      children: bestOfActionMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie,\n        rank: index + 1,\n        category: \"best-of-action\",\n        genres: genres\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"t8uEmh4pzzEyYVq+1J7PgreD69M=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieCard","jsxDEV","_jsxDEV","Dashboard","_s","movies","setMovies","genres","setGenres","loading","setLoading","error","setError","fetchGenres","genreResponse","get","data","reduce","acc","genre","id","name","message","fetchMovies","movieResponse","results","children","fileName","_jsxFileName","lineNumber","columnNumber","topRatedMovies","slice","bestOfActionMovies","className","map","movie","index","rank","category","_c","$RefreshReg$"],"sources":["/Users/giorgininidze/Documents/React Projects/movie-app/src/dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieCard from '../components/MovieCard';\nimport '../components/styles.css';\n\nconst Dashboard = () => {\n    const [movies, setMovies] = useState([]);\n    const [genres, setGenres] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchGenres = async () => {\n            try {\n                const genreResponse = await axios.get('https://api.themoviedb.org/3/genre/movie/list?api_key=936d7807b77bbb4238f8847775a026ad');\n                const genres = genreResponse.data.genres.reduce((acc, genre) => {\n                    acc[genre.id] = genre.name;\n                    return acc;\n                }, {});\n                setGenres(genres);\n            } catch (error) {\n                setError(error.message);\n            }\n        };\n\n        const fetchMovies = async () => {\n            try {\n                const movieResponse = await axios.get('https://api.themoviedb.org/3/discover/movie?api_key=19193cff750d7dd975d3bdfcb8c10ae7');\n                setMovies(movieResponse.data.results);\n                setLoading(false);\n            } catch (error) {\n                setError(error.message);\n                setLoading(false);\n            }\n        };\n\n        fetchGenres();\n        fetchMovies();\n    }, []);\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error}</div>;\n\n    const topRatedMovies = movies.slice(0, 4);\n    const bestOfActionMovies = movies.slice(4, 12);\n\n    return (\n        <div className=\"dashboard\">\n            <h1>Movie Dashboard</h1>\n\n            <h2>Top Rated</h2>\n            <div className=\"movie-list top-rated\">\n                {topRatedMovies.map((movie, index) => (\n                    <MovieCard key={movie.id} movie={movie} rank={index + 1} category=\"top-rated\" genres={genres} />\n                ))}\n            </div>\n\n            <h2>Best of Action</h2>\n            <div className=\"movie-list best-of-action\">\n                {bestOfActionMovies.map((movie, index) => (\n                    <MovieCard key={movie.id} movie={movie} rank={index + 1} category=\"best-of-action\" genres={genres} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}